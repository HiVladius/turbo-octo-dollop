name: CI/CD Pipeline

on:
  push:
    branches: [ main, feature/** ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  # Test y Build
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      # Portfolio
      - name: Install portfolio dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint
      
      - name: Run type check
        run: npm run type-check
      
      # Blog
      - name: Install blog dependencies
        run: cd microfrontends/angular-blog && npm ci
      
      - name: Build blog
        run: npm run build:blog
      
      # Build segÃºn ambiente
      - name: Build portfolio (staging)
        if: github.event_name == 'pull_request'
        run: npm run build -- --mode staging
        env:
          VITE_BLOG_URL: https://porfolio-vlad-staging.web.app/blog
          VITE_EMAIL_SERVICE: ${{ secrets.MY_EMAIL_SERVICE }}
          VITE_EMAIL_TO: ${{ secrets.MY_EMAIL_TO }}
          VITE_EMAIL_PASS: ${{ secrets.MY_EMAIL_PASS }}
      
      - name: Build portfolio (production)
        if: github.ref == 'refs/heads/main'
        run: npm run build -- --mode production
        env:
          VITE_BLOG_URL: https://porfolio-vlad.web.app/blog
          VITE_EMAIL_SERVICE: ${{ secrets.MY_EMAIL_SERVICE }}
          VITE_EMAIL_TO: ${{ secrets.MY_EMAIL_TO }}
          VITE_EMAIL_PASS: ${{ secrets.MY_EMAIL_PASS }}
      
      - name: Prepare deploy files
        run: npm run prepare:deploy
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 1

  # Security scan
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Run npm audit (portfolio)
        run: npm audit --audit-level moderate
        continue-on-error: true
      
      - name: Run npm audit (blog)
        run: cd microfrontends/angular-blog && npm audit --audit-level moderate
        continue-on-error: true

  # Deploy a Staging (PRs)
  deploy-staging:
    needs: [build, security]
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      
      - name: Deploy to Firebase Staging
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PORFOLIO_VLAD_STAGING }}
          projectId: porfolio-vlad-staging
          expires: 7d
        id: firebase-deploy
      
      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const output = `#### ðŸš€ Deploy to Staging
            
            **Status**: ${{ job.status }}
            **Preview URL**: https://porfolio-vlad-staging.web.app
            **Blog URL**: https://porfolio-vlad-staging.web.app/blog
            
            Expires in 7 days.
            
            <details>
            <summary>Show Details</summary>
            
            \`\`\`
            Project: porfolio-vlad-staging
            Environment: staging
            Commit: ${{ github.sha }}
            \`\`\`
            </details>`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  # Deploy a Production (merge a main)
  deploy-production:
    needs: [build, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      
      - name: Deploy to Firebase Production
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PORFOLIO_VLAD }}
          projectId: porfolio-vlad
          channelId: live
      
      - name: Create deployment summary
        run: |
          echo "### ðŸŽ‰ Deployment Successful!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Portfolio**: https://porfolio-vlad.web.app" >> $GITHUB_STEP_SUMMARY
          echo "**Blog**: https://porfolio-vlad.web.app/blog" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY